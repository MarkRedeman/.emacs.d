;;; ofc-semantic-php.wy -- LALR grammar for PHP 5.5

%package ofc-semantic-php-wy
%provide ofc-semantic-php-wy

%languagemode php-mode

;; The default start symbol
%start grammar

%start class_declaration
%start compilation_unit

;; Keyword
%type    <keyword>
%keyword T_NAMESPACE    "namespace"
%keyword T_CLASS        "ofc"
%keyword T_INCLUDE      "include"
%keyword T_INCLUDE_ONCE "include_once"
%keyword T_REQUIRE      "require"
%keyword T_REQUIRE_ONCE "require_once"

;; Literals
%type  <symbol>  ;;syntax "\\(\\$?[a-zA-Z_][a-zA-Z0-9_]+\\)"
%token <symbol>  T_STRING

%type  <string>
%token <string>  T_ENCAPSED_STRING

%type  <number>
%token <number>  T_NUMBER

;; Don't generate these analyzers which needs special handling code.
%token <code>    PROLOGUE
%token <code>    EPILOGUE

;; Blocks & Parenthesis
%type  <block>
%token <block>  PAREN_BLOCK "(PAREN_OPEN PAREN_CLOSE)"
%token <block>  BRACE_BLOCK "(BRACE_OPEN BRACE_CLOSE)"
%token <block>  BRACK_BLOCK "(BRACK_OPEN BRACK_CLOSE)"

%token <open-paren>   PAREN_OPEN  "("
%token <close-paren>  PAREN_CLOSE ")"
%token <open-paren>   BRACE_OPEN  "{"
%token <close-paren>  BRACE_CLOSE "}"
%token <open-paren>   BRACK_OPEN  "["
%token <close-paren>  BRACK_CLOSE "]"

;; Punctuations
%type  <punctuation>
%token <punctuation>  T_OBJECT_OPERATOR "->"
%token <punctuation>  T_SEMICOLON       ";"

%left T_INCLUDE T_INCLUDE_ONCE T_EVAL T_REQUIRE T_REQUIRE_ONCE

%%

grammar
  : compilation_unit
  ;

compilation_unit
  : class_declaration
  ;

class_declaration
  : T_CLASS T_STRING T_SEMICOLON
  ;

class_body
  : BRACE_BLOCK
  ;

;;; ofc-semantic-php.wy ends here
